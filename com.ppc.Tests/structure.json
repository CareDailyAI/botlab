{
  # This bot extends a foundational bot framework for microservices
  "extends": "com.ppc.Bot",

  # Share microservices across multiple bots by copying the target end-directory into the local /intelligence directory
  "microservices": [
    # Intelligence
    "com.ppc.Microservices/intelligence/absent_ml_example",
    # "com.ppc.Microservices/intelligence/analytics_amplitude",
    # "com.ppc.Microservices/intelligence/analytics_mixpanel",
    "com.ppc.Microservices/intelligence/dailyreport",
    "com.ppc.Microservices/intelligence/dashboard",
    "com.ppc.Microservices/intelligence/data_request",
    "com.ppc.Microservices/intelligence/daylight",
    "com.ppc.Microservices/intelligence/last_seen",
    "com.ppc.Microservices/intelligence/messaging",
    "com.ppc.Microservices/intelligence/multistream",
    "com.ppc.Microservices/intelligence/sms_delivery",
    "com.ppc.Microservices/intelligence/tasks",
    # "com.ppc.Microservices/intelligence/videoai/amazonvideo",
    # "com.ppc.Microservices/intelligence/videoai/googlevideo",
    # "com.ppc.Microservices/intelligence/videoai/microsoftvideo",
    "com.ppc.Microservices/intelligence/welcome",

    # Lessons
    # "com.ppc.Lesson0-BotEngine",                                    # Placeholder for Lesson 0
    # "com.ppc.Lesson1-Microservices/intelligence/lesson1",           # Placeholder for Lesson 1
    # "com.ppc.Lesson2-LiveUpdates/intelligence/lesson2",             # Placeholder for Lesson 2
    # "com.ppc.Lesson3-Commands/intelligence/lesson3",                # Placeholder for Lesson 3
    # "com.ppc.Lesson4-Notifications/intelligence/lesson4",           # Placeholder for Lesson 4
    # "com.ppc.Lesson5-SpaceTime/intelligence/lesson5",               # Placeholder for Lesson 5
    # "com.ppc.Lesson6-DataStreams/intelligence/lesson6",             # Placeholder for Lesson 6
    # "com.ppc.Lesson7-SunriseSunset/intelligence/lesson7",           # Placeholder for Lesson 7
    # "com.ppc.Lesson8-Video/intelligence/lesson8",                   # Placeholder for Lesson 8
    # "com.ppc.Lesson9-Sms/intelligence/lesson9",                     # Placeholder for Lesson 9
    # "com.ppc.Lesson10-MachineLearning/intelligence/lesson10",       # Placeholder for Lesson 10
    # "com.ppc.Lesson11-Questions/intelligence/lesson11",             # Placeholder for Lesson 11
    # "com.ppc.Lesson12-Tags/intelligence/lesson12",                  # Placeholder for Lesson 12
    # "com.ppc.Lesson13-LanguageLocalization/intelligence/lesson13",  # Placeholder for Lesson 13
    # "com.ppc.Lesson14-Weather/intelligence/lesson14",               # Placeholder for Lesson 14
    # "com.ppc.Lesson15-Analytics/intelligence/lesson15",             # Placeholder for Lesson 15
    # "com.ppc.Lesson16-Narratives/intelligence/lesson16",            # Placeholder for Lesson 16
    # "com.ppc.Lesson17-UserInterfaces/intelligence/lesson17",        # Placeholder for Lesson 17
    # "com.ppc.Lesson18-UserManagement/intelligence/lesson18",        # Placeholder for Lesson 18
    # "com.ppc.Lesson19-Behaviors/intelligence/lesson19",             # Placeholder for Lesson 19
    # "com.ppc.Lesson20-Rules/intelligence/lesson20",                 # Placeholder for Lesson 20
    # "com.ppc.Lesson21-EdgeComputing/intelligence/lesson21",         # Placeholder for Lesson 21

    # Filters
    "com.ppc.Microservices/filters/example_filter"
  ],

  # Safely delete these microservice packages from the service, without resetting live bot instances
  # Double check that the microservices listed here do not appear in the list of 'microservices' above.
  "safe_delete_microservices": [
  ],

  # Locally install the following Python package dependencies when using this microservice
  # Do not include any Python packages in this list that will compile .so/.dll library files natively
  # because they may not be able to run on the Linux-based server environment.
  "pip_install": [
  ],

  # Remotely install the following Python package dependencies
  # This will compile library files at the server in a Linux environment.
  # Note that when installed on Linux, some Python packages may get significantly inflated (like scipy and numpy)
  # due to the addition of hidden .libs directories that end up exceeding the maximum size of a bot
  # (50MB compressed / 250MB uncompressed).
  "pip_install_remotely": [
  ]

}
